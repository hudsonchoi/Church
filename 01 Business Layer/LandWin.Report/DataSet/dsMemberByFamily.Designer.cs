//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LandWin.Report.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMemberByFamily")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMemberByFamily : global::System.Data.DataSet {
        
        private dsFamilyinfoDataTable tabledsFamilyinfo;
        
        private dsmemberdetailDataTable tabledsmemberdetail;
        
        private dscommentDataTable tabledscomment;
        
        private global::System.Data.DataRelation relationdsFamilyinfo_dsmemberdetail;
        
        private global::System.Data.DataRelation relationdsFamilyinfo_dscomment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsMemberByFamily() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsMemberByFamily(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsFamilyinfo"] != null)) {
                    base.Tables.Add(new dsFamilyinfoDataTable(ds.Tables["dsFamilyinfo"]));
                }
                if ((ds.Tables["dsmemberdetail"] != null)) {
                    base.Tables.Add(new dsmemberdetailDataTable(ds.Tables["dsmemberdetail"]));
                }
                if ((ds.Tables["dscomment"] != null)) {
                    base.Tables.Add(new dscommentDataTable(ds.Tables["dscomment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsFamilyinfoDataTable dsFamilyinfo {
            get {
                return this.tabledsFamilyinfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsmemberdetailDataTable dsmemberdetail {
            get {
                return this.tabledsmemberdetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dscommentDataTable dscomment {
            get {
                return this.tabledscomment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsMemberByFamily cln = ((dsMemberByFamily)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsFamilyinfo"] != null)) {
                    base.Tables.Add(new dsFamilyinfoDataTable(ds.Tables["dsFamilyinfo"]));
                }
                if ((ds.Tables["dsmemberdetail"] != null)) {
                    base.Tables.Add(new dsmemberdetailDataTable(ds.Tables["dsmemberdetail"]));
                }
                if ((ds.Tables["dscomment"] != null)) {
                    base.Tables.Add(new dscommentDataTable(ds.Tables["dscomment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsFamilyinfo = ((dsFamilyinfoDataTable)(base.Tables["dsFamilyinfo"]));
            if ((initTable == true)) {
                if ((this.tabledsFamilyinfo != null)) {
                    this.tabledsFamilyinfo.InitVars();
                }
            }
            this.tabledsmemberdetail = ((dsmemberdetailDataTable)(base.Tables["dsmemberdetail"]));
            if ((initTable == true)) {
                if ((this.tabledsmemberdetail != null)) {
                    this.tabledsmemberdetail.InitVars();
                }
            }
            this.tabledscomment = ((dscommentDataTable)(base.Tables["dscomment"]));
            if ((initTable == true)) {
                if ((this.tabledscomment != null)) {
                    this.tabledscomment.InitVars();
                }
            }
            this.relationdsFamilyinfo_dsmemberdetail = this.Relations["dsFamilyinfo_dsmemberdetail"];
            this.relationdsFamilyinfo_dscomment = this.Relations["dsFamilyinfo_dscomment"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsMemberByFamily";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMemberByFamily.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsFamilyinfo = new dsFamilyinfoDataTable();
            base.Tables.Add(this.tabledsFamilyinfo);
            this.tabledsmemberdetail = new dsmemberdetailDataTable();
            base.Tables.Add(this.tabledsmemberdetail);
            this.tabledscomment = new dscommentDataTable();
            base.Tables.Add(this.tabledscomment);
            this.relationdsFamilyinfo_dsmemberdetail = new global::System.Data.DataRelation("dsFamilyinfo_dsmemberdetail", new global::System.Data.DataColumn[] {
                        this.tabledsFamilyinfo.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledsmemberdetail.FamilyIdColumn}, false);
            this.Relations.Add(this.relationdsFamilyinfo_dsmemberdetail);
            this.relationdsFamilyinfo_dscomment = new global::System.Data.DataRelation("dsFamilyinfo_dscomment", new global::System.Data.DataColumn[] {
                        this.tabledsFamilyinfo.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledscomment.family_codeColumn}, false);
            this.Relations.Add(this.relationdsFamilyinfo_dscomment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsFamilyinfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsmemberdetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedscomment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMemberByFamily ds = new dsMemberByFamily();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsFamilyinfoRowChangeEventHandler(object sender, dsFamilyinfoRowChangeEvent e);
        
        public delegate void dsmemberdetailRowChangeEventHandler(object sender, dsmemberdetailRowChangeEvent e);
        
        public delegate void dscommentRowChangeEventHandler(object sender, dscommentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsFamilyinfoDataTable : global::System.Data.TypedTableBase<dsFamilyinfoRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnHome;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnStatecode;
            
            private global::System.Data.DataColumn columnEntrydate;
            
            private global::System.Data.DataColumn columnZipcode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoDataTable() {
                this.TableName = "dsFamilyinfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFamilyinfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsFamilyinfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HomeColumn {
                get {
                    return this.columnHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatecodeColumn {
                get {
                    return this.columnStatecode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntrydateColumn {
                get {
                    return this.columnEntrydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipcodeColumn {
                get {
                    return this.columnZipcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow this[int index] {
                get {
                    return ((dsFamilyinfoRow)(this.Rows[index]));
                }
            }
            
            public event dsFamilyinfoRowChangeEventHandler dsFamilyinfoRowChanging;
            
            public event dsFamilyinfoRowChangeEventHandler dsFamilyinfoRowChanged;
            
            public event dsFamilyinfoRowChangeEventHandler dsFamilyinfoRowDeleting;
            
            public event dsFamilyinfoRowChangeEventHandler dsFamilyinfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsFamilyinfoRow(dsFamilyinfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow AdddsFamilyinfoRow(int Id, string Name, string Home, string Address, string City, string Statecode, string Entrydate, string Zipcode) {
                dsFamilyinfoRow rowdsFamilyinfoRow = ((dsFamilyinfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Name,
                        Home,
                        Address,
                        City,
                        Statecode,
                        Entrydate,
                        Zipcode};
                rowdsFamilyinfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsFamilyinfoRow);
                return rowdsFamilyinfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow FindById(int Id) {
                return ((dsFamilyinfoRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsFamilyinfoDataTable cln = ((dsFamilyinfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsFamilyinfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnHome = base.Columns["Home"];
                this.columnAddress = base.Columns["Address"];
                this.columnCity = base.Columns["City"];
                this.columnStatecode = base.Columns["Statecode"];
                this.columnEntrydate = base.Columns["Entrydate"];
                this.columnZipcode = base.Columns["Zipcode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnHome = new global::System.Data.DataColumn("Home", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHome);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnStatecode = new global::System.Data.DataColumn("Statecode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatecode);
                this.columnEntrydate = new global::System.Data.DataColumn("Entrydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntrydate);
                this.columnZipcode = new global::System.Data.DataColumn("Zipcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipcode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow NewdsFamilyinfoRow() {
                return ((dsFamilyinfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsFamilyinfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsFamilyinfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsFamilyinfoRowChanged != null)) {
                    this.dsFamilyinfoRowChanged(this, new dsFamilyinfoRowChangeEvent(((dsFamilyinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsFamilyinfoRowChanging != null)) {
                    this.dsFamilyinfoRowChanging(this, new dsFamilyinfoRowChangeEvent(((dsFamilyinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsFamilyinfoRowDeleted != null)) {
                    this.dsFamilyinfoRowDeleted(this, new dsFamilyinfoRowChangeEvent(((dsFamilyinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsFamilyinfoRowDeleting != null)) {
                    this.dsFamilyinfoRowDeleting(this, new dsFamilyinfoRowChangeEvent(((dsFamilyinfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsFamilyinfoRow(dsFamilyinfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberByFamily ds = new dsMemberByFamily();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsFamilyinfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsmemberdetailDataTable : global::System.Data.TypedTableBase<dsmemberdetailRow> {
            
            private global::System.Data.DataColumn columnMemberId;
            
            private global::System.Data.DataColumn columnFamilyId;
            
            private global::System.Data.DataColumn columnKo_name;
            
            private global::System.Data.DataColumn columnEn_name;
            
            private global::System.Data.DataColumn columnBirthdate;
            
            private global::System.Data.DataColumn columnSpouse;
            
            private global::System.Data.DataColumn columnMarried;
            
            private global::System.Data.DataColumn columnJobtype;
            
            private global::System.Data.DataColumn columnJob;
            
            private global::System.Data.DataColumn columnCellphone;
            
            private global::System.Data.DataColumn columnCellName;
            
            private global::System.Data.DataColumn columnSubdiv;
            
            private global::System.Data.DataColumn columnBaptism;
            
            private global::System.Data.DataColumn columnBaptismdate;
            
            private global::System.Data.DataColumn columnEntrytype;
            
            private global::System.Data.DataColumn columnEntrydate;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnFellowship;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnRelationship;
            
            private global::System.Data.DataColumn columnImage;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnOffice;
            
            private global::System.Data.DataColumn columnFellowshipdate;
            
            private global::System.Data.DataColumn columnMinistryList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailDataTable() {
                this.TableName = "dsmemberdetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsmemberdetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsmemberdetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIdColumn {
                get {
                    return this.columnMemberId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyIdColumn {
                get {
                    return this.columnFamilyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ko_nameColumn {
                get {
                    return this.columnKo_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn En_nameColumn {
                get {
                    return this.columnEn_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdateColumn {
                get {
                    return this.columnBirthdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpouseColumn {
                get {
                    return this.columnSpouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriedColumn {
                get {
                    return this.columnMarried;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobtypeColumn {
                get {
                    return this.columnJobtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobColumn {
                get {
                    return this.columnJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellphoneColumn {
                get {
                    return this.columnCellphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellNameColumn {
                get {
                    return this.columnCellName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivColumn {
                get {
                    return this.columnSubdiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaptismColumn {
                get {
                    return this.columnBaptism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaptismdateColumn {
                get {
                    return this.columnBaptismdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntrytypeColumn {
                get {
                    return this.columnEntrytype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntrydateColumn {
                get {
                    return this.columnEntrydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FellowshipColumn {
                get {
                    return this.columnFellowship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipColumn {
                get {
                    return this.columnRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageColumn {
                get {
                    return this.columnImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficeColumn {
                get {
                    return this.columnOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FellowshipdateColumn {
                get {
                    return this.columnFellowshipdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinistryListColumn {
                get {
                    return this.columnMinistryList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow this[int index] {
                get {
                    return ((dsmemberdetailRow)(this.Rows[index]));
                }
            }
            
            public event dsmemberdetailRowChangeEventHandler dsmemberdetailRowChanging;
            
            public event dsmemberdetailRowChangeEventHandler dsmemberdetailRowChanged;
            
            public event dsmemberdetailRowChangeEventHandler dsmemberdetailRowDeleting;
            
            public event dsmemberdetailRowChangeEventHandler dsmemberdetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsmemberdetailRow(dsmemberdetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow AdddsmemberdetailRow(
                        string MemberId, 
                        dsFamilyinfoRow parentdsFamilyinfoRowBydsFamilyinfo_dsmemberdetail, 
                        string Ko_name, 
                        string En_name, 
                        string Birthdate, 
                        string Spouse, 
                        string Married, 
                        string Jobtype, 
                        string Job, 
                        string Cellphone, 
                        string CellName, 
                        string Subdiv, 
                        string Baptism, 
                        string Baptismdate, 
                        string Entrytype, 
                        string Entrydate, 
                        string Status, 
                        string Fellowship, 
                        string Sex, 
                        string Relationship, 
                        byte[] Image, 
                        string Email, 
                        string Office, 
                        string Fellowshipdate, 
                        string MinistryList) {
                dsmemberdetailRow rowdsmemberdetailRow = ((dsmemberdetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MemberId,
                        null,
                        Ko_name,
                        En_name,
                        Birthdate,
                        Spouse,
                        Married,
                        Jobtype,
                        Job,
                        Cellphone,
                        CellName,
                        Subdiv,
                        Baptism,
                        Baptismdate,
                        Entrytype,
                        Entrydate,
                        Status,
                        Fellowship,
                        Sex,
                        Relationship,
                        Image,
                        Email,
                        Office,
                        Fellowshipdate,
                        MinistryList};
                if ((parentdsFamilyinfoRowBydsFamilyinfo_dsmemberdetail != null)) {
                    columnValuesArray[1] = parentdsFamilyinfoRowBydsFamilyinfo_dsmemberdetail[0];
                }
                rowdsmemberdetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsmemberdetailRow);
                return rowdsmemberdetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow FindByMemberId(string MemberId) {
                return ((dsmemberdetailRow)(this.Rows.Find(new object[] {
                            MemberId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsmemberdetailDataTable cln = ((dsmemberdetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsmemberdetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMemberId = base.Columns["MemberId"];
                this.columnFamilyId = base.Columns["FamilyId"];
                this.columnKo_name = base.Columns["Ko_name"];
                this.columnEn_name = base.Columns["En_name"];
                this.columnBirthdate = base.Columns["Birthdate"];
                this.columnSpouse = base.Columns["Spouse"];
                this.columnMarried = base.Columns["Married"];
                this.columnJobtype = base.Columns["Jobtype"];
                this.columnJob = base.Columns["Job"];
                this.columnCellphone = base.Columns["Cellphone"];
                this.columnCellName = base.Columns["CellName"];
                this.columnSubdiv = base.Columns["Subdiv"];
                this.columnBaptism = base.Columns["Baptism"];
                this.columnBaptismdate = base.Columns["Baptismdate"];
                this.columnEntrytype = base.Columns["Entrytype"];
                this.columnEntrydate = base.Columns["Entrydate"];
                this.columnStatus = base.Columns["Status"];
                this.columnFellowship = base.Columns["Fellowship"];
                this.columnSex = base.Columns["Sex"];
                this.columnRelationship = base.Columns["Relationship"];
                this.columnImage = base.Columns["Image"];
                this.columnEmail = base.Columns["Email"];
                this.columnOffice = base.Columns["Office"];
                this.columnFellowshipdate = base.Columns["Fellowshipdate"];
                this.columnMinistryList = base.Columns["MinistryList"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMemberId = new global::System.Data.DataColumn("MemberId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberId);
                this.columnFamilyId = new global::System.Data.DataColumn("FamilyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyId);
                this.columnKo_name = new global::System.Data.DataColumn("Ko_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKo_name);
                this.columnEn_name = new global::System.Data.DataColumn("En_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEn_name);
                this.columnBirthdate = new global::System.Data.DataColumn("Birthdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthdate);
                this.columnSpouse = new global::System.Data.DataColumn("Spouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpouse);
                this.columnMarried = new global::System.Data.DataColumn("Married", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarried);
                this.columnJobtype = new global::System.Data.DataColumn("Jobtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobtype);
                this.columnJob = new global::System.Data.DataColumn("Job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob);
                this.columnCellphone = new global::System.Data.DataColumn("Cellphone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellphone);
                this.columnCellName = new global::System.Data.DataColumn("CellName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnSubdiv = new global::System.Data.DataColumn("Subdiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdiv);
                this.columnBaptism = new global::System.Data.DataColumn("Baptism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaptism);
                this.columnBaptismdate = new global::System.Data.DataColumn("Baptismdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaptismdate);
                this.columnEntrytype = new global::System.Data.DataColumn("Entrytype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntrytype);
                this.columnEntrydate = new global::System.Data.DataColumn("Entrydate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntrydate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnFellowship = new global::System.Data.DataColumn("Fellowship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFellowship);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnRelationship = new global::System.Data.DataColumn("Relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationship);
                this.columnImage = new global::System.Data.DataColumn("Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnOffice = new global::System.Data.DataColumn("Office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffice);
                this.columnFellowshipdate = new global::System.Data.DataColumn("Fellowshipdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFellowshipdate);
                this.columnMinistryList = new global::System.Data.DataColumn("MinistryList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinistryList);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMemberId}, true));
                this.columnMemberId.AllowDBNull = false;
                this.columnMemberId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow NewdsmemberdetailRow() {
                return ((dsmemberdetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsmemberdetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsmemberdetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsmemberdetailRowChanged != null)) {
                    this.dsmemberdetailRowChanged(this, new dsmemberdetailRowChangeEvent(((dsmemberdetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsmemberdetailRowChanging != null)) {
                    this.dsmemberdetailRowChanging(this, new dsmemberdetailRowChangeEvent(((dsmemberdetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsmemberdetailRowDeleted != null)) {
                    this.dsmemberdetailRowDeleted(this, new dsmemberdetailRowChangeEvent(((dsmemberdetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsmemberdetailRowDeleting != null)) {
                    this.dsmemberdetailRowDeleting(this, new dsmemberdetailRowChangeEvent(((dsmemberdetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsmemberdetailRow(dsmemberdetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberByFamily ds = new dsMemberByFamily();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsmemberdetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dscommentDataTable : global::System.Data.TypedTableBase<dscommentRow> {
            
            private global::System.Data.DataColumn columnfamily_code;
            
            private global::System.Data.DataColumn columnlastupdate;
            
            private global::System.Data.DataColumn columncomment;
            
            private global::System.Data.DataColumn columnid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentDataTable() {
                this.TableName = "dscomment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dscommentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dscommentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn family_codeColumn {
                get {
                    return this.columnfamily_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastupdateColumn {
                get {
                    return this.columnlastupdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentColumn {
                get {
                    return this.columncomment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow this[int index] {
                get {
                    return ((dscommentRow)(this.Rows[index]));
                }
            }
            
            public event dscommentRowChangeEventHandler dscommentRowChanging;
            
            public event dscommentRowChangeEventHandler dscommentRowChanged;
            
            public event dscommentRowChangeEventHandler dscommentRowDeleting;
            
            public event dscommentRowChangeEventHandler dscommentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddscommentRow(dscommentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow AdddscommentRow(dsFamilyinfoRow parentdsFamilyinfoRowBydsFamilyinfo_dscomment, System.DateTime lastupdate, string comment, int id) {
                dscommentRow rowdscommentRow = ((dscommentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        lastupdate,
                        comment,
                        id};
                if ((parentdsFamilyinfoRowBydsFamilyinfo_dscomment != null)) {
                    columnValuesArray[0] = parentdsFamilyinfoRowBydsFamilyinfo_dscomment[0];
                }
                rowdscommentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdscommentRow);
                return rowdscommentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow FindByid(int id) {
                return ((dscommentRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dscommentDataTable cln = ((dscommentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dscommentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfamily_code = base.Columns["family_code"];
                this.columnlastupdate = base.Columns["lastupdate"];
                this.columncomment = base.Columns["comment"];
                this.columnid = base.Columns["id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfamily_code = new global::System.Data.DataColumn("family_code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_code);
                this.columnlastupdate = new global::System.Data.DataColumn("lastupdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastupdate);
                this.columncomment = new global::System.Data.DataColumn("comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow NewdscommentRow() {
                return ((dscommentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dscommentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dscommentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dscommentRowChanged != null)) {
                    this.dscommentRowChanged(this, new dscommentRowChangeEvent(((dscommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dscommentRowChanging != null)) {
                    this.dscommentRowChanging(this, new dscommentRowChangeEvent(((dscommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dscommentRowDeleted != null)) {
                    this.dscommentRowDeleted(this, new dscommentRowChangeEvent(((dscommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dscommentRowDeleting != null)) {
                    this.dscommentRowDeleting(this, new dscommentRowChangeEvent(((dscommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedscommentRow(dscommentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberByFamily ds = new dsMemberByFamily();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dscommentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsFamilyinfoRow : global::System.Data.DataRow {
            
            private dsFamilyinfoDataTable tabledsFamilyinfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFamilyinfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsFamilyinfo = ((dsFamilyinfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tabledsFamilyinfo.IdColumn]));
                }
                set {
                    this[this.tabledsFamilyinfo.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Home {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.HomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Home\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.HomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Statecode {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.StatecodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Statecode\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.StatecodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Entrydate {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.EntrydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entrydate\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.EntrydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zipcode {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyinfo.ZipcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zipcode\' in table \'dsFamilyinfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyinfo.ZipcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsFamilyinfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsFamilyinfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeNull() {
                return this.IsNull(this.tabledsFamilyinfo.HomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeNull() {
                this[this.tabledsFamilyinfo.HomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tabledsFamilyinfo.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tabledsFamilyinfo.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabledsFamilyinfo.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabledsFamilyinfo.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatecodeNull() {
                return this.IsNull(this.tabledsFamilyinfo.StatecodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatecodeNull() {
                this[this.tabledsFamilyinfo.StatecodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntrydateNull() {
                return this.IsNull(this.tabledsFamilyinfo.EntrydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntrydateNull() {
                this[this.tabledsFamilyinfo.EntrydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipcodeNull() {
                return this.IsNull(this.tabledsFamilyinfo.ZipcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipcodeNull() {
                this[this.tabledsFamilyinfo.ZipcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow[] GetdsmemberdetailRows() {
                if ((this.Table.ChildRelations["dsFamilyinfo_dsmemberdetail"] == null)) {
                    return new dsmemberdetailRow[0];
                }
                else {
                    return ((dsmemberdetailRow[])(base.GetChildRows(this.Table.ChildRelations["dsFamilyinfo_dsmemberdetail"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow[] GetdscommentRows() {
                if ((this.Table.ChildRelations["dsFamilyinfo_dscomment"] == null)) {
                    return new dscommentRow[0];
                }
                else {
                    return ((dscommentRow[])(base.GetChildRows(this.Table.ChildRelations["dsFamilyinfo_dscomment"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsmemberdetailRow : global::System.Data.DataRow {
            
            private dsmemberdetailDataTable tabledsmemberdetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsmemberdetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsmemberdetail = ((dsmemberdetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberId {
                get {
                    return ((string)(this[this.tabledsmemberdetail.MemberIdColumn]));
                }
                set {
                    this[this.tabledsmemberdetail.MemberIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FamilyId {
                get {
                    try {
                        return ((int)(this[this.tabledsmemberdetail.FamilyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyId\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.FamilyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ko_name {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.Ko_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ko_name\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.Ko_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string En_name {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.En_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'En_name\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.En_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Birthdate {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.BirthdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthdate\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.BirthdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Spouse {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.SpouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spouse\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.SpouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Married {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.MarriedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Married\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.MarriedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jobtype {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.JobtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jobtype\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.JobtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Job {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.JobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.JobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cellphone {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.CellphoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cellphone\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.CellphoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CellName {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.CellNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellName\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.CellNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subdiv {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.SubdivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subdiv\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.SubdivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Baptism {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.BaptismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baptism\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.BaptismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Baptismdate {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.BaptismdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baptismdate\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.BaptismdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Entrytype {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.EntrytypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entrytype\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.EntrytypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Entrydate {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.EntrydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entrydate\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.EntrydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fellowship {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.FellowshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fellowship\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.FellowshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Relationship {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.RelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relationship\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.RelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image {
                get {
                    try {
                        return ((byte[])(this[this.tabledsmemberdetail.ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Office {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.OfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Office\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.OfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fellowshipdate {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.FellowshipdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fellowshipdate\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.FellowshipdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MinistryList {
                get {
                    try {
                        return ((string)(this[this.tabledsmemberdetail.MinistryListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinistryList\' in table \'dsmemberdetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsmemberdetail.MinistryListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow dsFamilyinfoRow {
                get {
                    return ((dsFamilyinfoRow)(this.GetParentRow(this.Table.ParentRelations["dsFamilyinfo_dsmemberdetail"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dsFamilyinfo_dsmemberdetail"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyIdNull() {
                return this.IsNull(this.tabledsmemberdetail.FamilyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyIdNull() {
                this[this.tabledsmemberdetail.FamilyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKo_nameNull() {
                return this.IsNull(this.tabledsmemberdetail.Ko_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKo_nameNull() {
                this[this.tabledsmemberdetail.Ko_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEn_nameNull() {
                return this.IsNull(this.tabledsmemberdetail.En_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEn_nameNull() {
                this[this.tabledsmemberdetail.En_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdateNull() {
                return this.IsNull(this.tabledsmemberdetail.BirthdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdateNull() {
                this[this.tabledsmemberdetail.BirthdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpouseNull() {
                return this.IsNull(this.tabledsmemberdetail.SpouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpouseNull() {
                this[this.tabledsmemberdetail.SpouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriedNull() {
                return this.IsNull(this.tabledsmemberdetail.MarriedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriedNull() {
                this[this.tabledsmemberdetail.MarriedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobtypeNull() {
                return this.IsNull(this.tabledsmemberdetail.JobtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobtypeNull() {
                this[this.tabledsmemberdetail.JobtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNull() {
                return this.IsNull(this.tabledsmemberdetail.JobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNull() {
                this[this.tabledsmemberdetail.JobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellphoneNull() {
                return this.IsNull(this.tabledsmemberdetail.CellphoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellphoneNull() {
                this[this.tabledsmemberdetail.CellphoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellNameNull() {
                return this.IsNull(this.tabledsmemberdetail.CellNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellNameNull() {
                this[this.tabledsmemberdetail.CellNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivNull() {
                return this.IsNull(this.tabledsmemberdetail.SubdivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivNull() {
                this[this.tabledsmemberdetail.SubdivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaptismNull() {
                return this.IsNull(this.tabledsmemberdetail.BaptismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaptismNull() {
                this[this.tabledsmemberdetail.BaptismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaptismdateNull() {
                return this.IsNull(this.tabledsmemberdetail.BaptismdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaptismdateNull() {
                this[this.tabledsmemberdetail.BaptismdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntrytypeNull() {
                return this.IsNull(this.tabledsmemberdetail.EntrytypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntrytypeNull() {
                this[this.tabledsmemberdetail.EntrytypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntrydateNull() {
                return this.IsNull(this.tabledsmemberdetail.EntrydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntrydateNull() {
                this[this.tabledsmemberdetail.EntrydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsmemberdetail.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsmemberdetail.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFellowshipNull() {
                return this.IsNull(this.tabledsmemberdetail.FellowshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFellowshipNull() {
                this[this.tabledsmemberdetail.FellowshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tabledsmemberdetail.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tabledsmemberdetail.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipNull() {
                return this.IsNull(this.tabledsmemberdetail.RelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipNull() {
                this[this.tabledsmemberdetail.RelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageNull() {
                return this.IsNull(this.tabledsmemberdetail.ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageNull() {
                this[this.tabledsmemberdetail.ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabledsmemberdetail.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabledsmemberdetail.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficeNull() {
                return this.IsNull(this.tabledsmemberdetail.OfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficeNull() {
                this[this.tabledsmemberdetail.OfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFellowshipdateNull() {
                return this.IsNull(this.tabledsmemberdetail.FellowshipdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFellowshipdateNull() {
                this[this.tabledsmemberdetail.FellowshipdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinistryListNull() {
                return this.IsNull(this.tabledsmemberdetail.MinistryListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinistryListNull() {
                this[this.tabledsmemberdetail.MinistryListColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dscommentRow : global::System.Data.DataRow {
            
            private dscommentDataTable tabledscomment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dscommentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledscomment = ((dscommentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int family_code {
                get {
                    try {
                        return ((int)(this[this.tabledscomment.family_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'family_code\' in table \'dscomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledscomment.family_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lastupdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledscomment.lastupdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastupdate\' in table \'dscomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledscomment.lastupdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comment {
                get {
                    try {
                        return ((string)(this[this.tabledscomment.commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comment\' in table \'dscomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledscomment.commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabledscomment.idColumn]));
                }
                set {
                    this[this.tabledscomment.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow dsFamilyinfoRow {
                get {
                    return ((dsFamilyinfoRow)(this.GetParentRow(this.Table.ParentRelations["dsFamilyinfo_dscomment"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dsFamilyinfo_dscomment"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_codeNull() {
                return this.IsNull(this.tabledscomment.family_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_codeNull() {
                this[this.tabledscomment.family_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastupdateNull() {
                return this.IsNull(this.tabledscomment.lastupdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastupdateNull() {
                this[this.tabledscomment.lastupdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentNull() {
                return this.IsNull(this.tabledscomment.commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentNull() {
                this[this.tabledscomment.commentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsFamilyinfoRowChangeEvent : global::System.EventArgs {
            
            private dsFamilyinfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRowChangeEvent(dsFamilyinfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyinfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsmemberdetailRowChangeEvent : global::System.EventArgs {
            
            private dsmemberdetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRowChangeEvent(dsmemberdetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsmemberdetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dscommentRowChangeEvent : global::System.EventArgs {
            
            private dscommentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRowChangeEvent(dscommentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dscommentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591