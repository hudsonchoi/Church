//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LandWin.Report.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMemberCard")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMemberCard : global::System.Data.DataSet {
        
        private dsMemberInfoDataTable tabledsMemberInfo;
        
        private dsFamilyInfoDataTable tabledsFamilyInfo;
        
        private dsContextsDataTable tabledsContexts;
        
        private global::System.Data.DataRelation relationdsMemberInfo_dsContexts;
        
        private global::System.Data.DataRelation relationdsMemberInfo_dsFamilyInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsMemberCard() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsMemberCard(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dsMemberInfo"] != null)) {
                    base.Tables.Add(new dsMemberInfoDataTable(ds.Tables["dsMemberInfo"]));
                }
                if ((ds.Tables["dsFamilyInfo"] != null)) {
                    base.Tables.Add(new dsFamilyInfoDataTable(ds.Tables["dsFamilyInfo"]));
                }
                if ((ds.Tables["dsContexts"] != null)) {
                    base.Tables.Add(new dsContextsDataTable(ds.Tables["dsContexts"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsMemberInfoDataTable dsMemberInfo {
            get {
                return this.tabledsMemberInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsFamilyInfoDataTable dsFamilyInfo {
            get {
                return this.tabledsFamilyInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dsContextsDataTable dsContexts {
            get {
                return this.tabledsContexts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsMemberCard cln = ((dsMemberCard)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dsMemberInfo"] != null)) {
                    base.Tables.Add(new dsMemberInfoDataTable(ds.Tables["dsMemberInfo"]));
                }
                if ((ds.Tables["dsFamilyInfo"] != null)) {
                    base.Tables.Add(new dsFamilyInfoDataTable(ds.Tables["dsFamilyInfo"]));
                }
                if ((ds.Tables["dsContexts"] != null)) {
                    base.Tables.Add(new dsContextsDataTable(ds.Tables["dsContexts"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledsMemberInfo = ((dsMemberInfoDataTable)(base.Tables["dsMemberInfo"]));
            if ((initTable == true)) {
                if ((this.tabledsMemberInfo != null)) {
                    this.tabledsMemberInfo.InitVars();
                }
            }
            this.tabledsFamilyInfo = ((dsFamilyInfoDataTable)(base.Tables["dsFamilyInfo"]));
            if ((initTable == true)) {
                if ((this.tabledsFamilyInfo != null)) {
                    this.tabledsFamilyInfo.InitVars();
                }
            }
            this.tabledsContexts = ((dsContextsDataTable)(base.Tables["dsContexts"]));
            if ((initTable == true)) {
                if ((this.tabledsContexts != null)) {
                    this.tabledsContexts.InitVars();
                }
            }
            this.relationdsMemberInfo_dsContexts = this.Relations["dsMemberInfo_dsContexts"];
            this.relationdsMemberInfo_dsFamilyInfo = this.Relations["dsMemberInfo_dsFamilyInfo"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsMemberCard";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMemberCard.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledsMemberInfo = new dsMemberInfoDataTable();
            base.Tables.Add(this.tabledsMemberInfo);
            this.tabledsFamilyInfo = new dsFamilyInfoDataTable();
            base.Tables.Add(this.tabledsFamilyInfo);
            this.tabledsContexts = new dsContextsDataTable();
            base.Tables.Add(this.tabledsContexts);
            this.relationdsMemberInfo_dsContexts = new global::System.Data.DataRelation("dsMemberInfo_dsContexts", new global::System.Data.DataColumn[] {
                        this.tabledsMemberInfo.MemberIdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledsContexts.MemberIdColumn}, false);
            this.Relations.Add(this.relationdsMemberInfo_dsContexts);
            this.relationdsMemberInfo_dsFamilyInfo = new global::System.Data.DataRelation("dsMemberInfo_dsFamilyInfo", new global::System.Data.DataColumn[] {
                        this.tabledsMemberInfo.FamilyIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabledsFamilyInfo.FamilyIDColumn}, false);
            this.Relations.Add(this.relationdsMemberInfo_dsFamilyInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsMemberInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsFamilyInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedsContexts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMemberCard ds = new dsMemberCard();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dsMemberInfoRowChangeEventHandler(object sender, dsMemberInfoRowChangeEvent e);
        
        public delegate void dsFamilyInfoRowChangeEventHandler(object sender, dsFamilyInfoRowChangeEvent e);
        
        public delegate void dsContextsRowChangeEventHandler(object sender, dsContextsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsMemberInfoDataTable : global::System.Data.TypedTableBase<dsMemberInfoRow> {
            
            private global::System.Data.DataColumn columnMemberId;
            
            private global::System.Data.DataColumn columnRegdate;
            
            private global::System.Data.DataColumn columnFellowship;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnHome;
            
            private global::System.Data.DataColumn columnCellphone;
            
            private global::System.Data.DataColumn columnOffice;
            
            private global::System.Data.DataColumn columnJob;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnCellName;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnBaptism;
            
            private global::System.Data.DataColumn columnSubdiv;
            
            private global::System.Data.DataColumn columnImage;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnFamilyID;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZipcode;
            
            private global::System.Data.DataColumn columnBaptismDate;
            
            private global::System.Data.DataColumn columnRelationship;
            
            private global::System.Data.DataColumn columnEntryType;
            
            private global::System.Data.DataColumn columnMinistryList;
            
            private global::System.Data.DataColumn columnPicture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoDataTable() {
                this.TableName = "dsMemberInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsMemberInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsMemberInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIdColumn {
                get {
                    return this.columnMemberId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FellowshipColumn {
                get {
                    return this.columnFellowship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HomeColumn {
                get {
                    return this.columnHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellphoneColumn {
                get {
                    return this.columnCellphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficeColumn {
                get {
                    return this.columnOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobColumn {
                get {
                    return this.columnJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellNameColumn {
                get {
                    return this.columnCellName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaptismColumn {
                get {
                    return this.columnBaptism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivColumn {
                get {
                    return this.columnSubdiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageColumn {
                get {
                    return this.columnImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyIDColumn {
                get {
                    return this.columnFamilyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipcodeColumn {
                get {
                    return this.columnZipcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaptismDateColumn {
                get {
                    return this.columnBaptismDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipColumn {
                get {
                    return this.columnRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryTypeColumn {
                get {
                    return this.columnEntryType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinistryListColumn {
                get {
                    return this.columnMinistryList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PictureColumn {
                get {
                    return this.columnPicture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow this[int index] {
                get {
                    return ((dsMemberInfoRow)(this.Rows[index]));
                }
            }
            
            public event dsMemberInfoRowChangeEventHandler dsMemberInfoRowChanging;
            
            public event dsMemberInfoRowChangeEventHandler dsMemberInfoRowChanged;
            
            public event dsMemberInfoRowChangeEventHandler dsMemberInfoRowDeleting;
            
            public event dsMemberInfoRowChangeEventHandler dsMemberInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsMemberInfoRow(dsMemberInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow AdddsMemberInfoRow(
                        int MemberId, 
                        System.DateTime Regdate, 
                        string Fellowship, 
                        string Name, 
                        string Address, 
                        string Home, 
                        string Cellphone, 
                        string Office, 
                        string Job, 
                        string Email, 
                        string CellName, 
                        string Status, 
                        string Sex, 
                        string Baptism, 
                        string Subdiv, 
                        byte[] Image, 
                        System.DateTime Birthday, 
                        string Age, 
                        string City, 
                        int FamilyID, 
                        string State, 
                        string Zipcode, 
                        System.DateTime BaptismDate, 
                        string Relationship, 
                        string EntryType, 
                        string MinistryList, 
                        string Picture) {
                dsMemberInfoRow rowdsMemberInfoRow = ((dsMemberInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MemberId,
                        Regdate,
                        Fellowship,
                        Name,
                        Address,
                        Home,
                        Cellphone,
                        Office,
                        Job,
                        Email,
                        CellName,
                        Status,
                        Sex,
                        Baptism,
                        Subdiv,
                        Image,
                        Birthday,
                        Age,
                        City,
                        FamilyID,
                        State,
                        Zipcode,
                        BaptismDate,
                        Relationship,
                        EntryType,
                        MinistryList,
                        Picture};
                rowdsMemberInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsMemberInfoRow);
                return rowdsMemberInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow FindByMemberId(int MemberId) {
                return ((dsMemberInfoRow)(this.Rows.Find(new object[] {
                            MemberId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsMemberInfoDataTable cln = ((dsMemberInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsMemberInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMemberId = base.Columns["MemberId"];
                this.columnRegdate = base.Columns["Regdate"];
                this.columnFellowship = base.Columns["Fellowship"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnHome = base.Columns["Home"];
                this.columnCellphone = base.Columns["Cellphone"];
                this.columnOffice = base.Columns["Office"];
                this.columnJob = base.Columns["Job"];
                this.columnEmail = base.Columns["Email"];
                this.columnCellName = base.Columns["CellName"];
                this.columnStatus = base.Columns["Status"];
                this.columnSex = base.Columns["Sex"];
                this.columnBaptism = base.Columns["Baptism"];
                this.columnSubdiv = base.Columns["Subdiv"];
                this.columnImage = base.Columns["Image"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnAge = base.Columns["Age"];
                this.columnCity = base.Columns["City"];
                this.columnFamilyID = base.Columns["FamilyID"];
                this.columnState = base.Columns["State"];
                this.columnZipcode = base.Columns["Zipcode"];
                this.columnBaptismDate = base.Columns["BaptismDate"];
                this.columnRelationship = base.Columns["Relationship"];
                this.columnEntryType = base.Columns["EntryType"];
                this.columnMinistryList = base.Columns["MinistryList"];
                this.columnPicture = base.Columns["Picture"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMemberId = new global::System.Data.DataColumn("MemberId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberId);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnFellowship = new global::System.Data.DataColumn("Fellowship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFellowship);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnHome = new global::System.Data.DataColumn("Home", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHome);
                this.columnCellphone = new global::System.Data.DataColumn("Cellphone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellphone);
                this.columnOffice = new global::System.Data.DataColumn("Office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffice);
                this.columnJob = new global::System.Data.DataColumn("Job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCellName = new global::System.Data.DataColumn("CellName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnBaptism = new global::System.Data.DataColumn("Baptism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaptism);
                this.columnSubdiv = new global::System.Data.DataColumn("Subdiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdiv);
                this.columnImage = new global::System.Data.DataColumn("Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnFamilyID = new global::System.Data.DataColumn("FamilyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyID);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZipcode = new global::System.Data.DataColumn("Zipcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipcode);
                this.columnBaptismDate = new global::System.Data.DataColumn("BaptismDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaptismDate);
                this.columnRelationship = new global::System.Data.DataColumn("Relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationship);
                this.columnEntryType = new global::System.Data.DataColumn("EntryType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryType);
                this.columnMinistryList = new global::System.Data.DataColumn("MinistryList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinistryList);
                this.columnPicture = new global::System.Data.DataColumn("Picture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("dsMemberInfoKey1", new global::System.Data.DataColumn[] {
                                this.columnMemberId}, true));
                this.columnMemberId.AllowDBNull = false;
                this.columnMemberId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow NewdsMemberInfoRow() {
                return ((dsMemberInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsMemberInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsMemberInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsMemberInfoRowChanged != null)) {
                    this.dsMemberInfoRowChanged(this, new dsMemberInfoRowChangeEvent(((dsMemberInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsMemberInfoRowChanging != null)) {
                    this.dsMemberInfoRowChanging(this, new dsMemberInfoRowChangeEvent(((dsMemberInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsMemberInfoRowDeleted != null)) {
                    this.dsMemberInfoRowDeleted(this, new dsMemberInfoRowChangeEvent(((dsMemberInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsMemberInfoRowDeleting != null)) {
                    this.dsMemberInfoRowDeleting(this, new dsMemberInfoRowChangeEvent(((dsMemberInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsMemberInfoRow(dsMemberInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberCard ds = new dsMemberCard();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsMemberInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsFamilyInfoDataTable : global::System.Data.TypedTableBase<dsFamilyInfoRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnRelationship;
            
            private global::System.Data.DataColumn columnBirthday;
            
            private global::System.Data.DataColumn columnFamilyID;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnFellowship;
            
            private global::System.Data.DataColumn columnBaptism;
            
            private global::System.Data.DataColumn columnJob;
            
            private global::System.Data.DataColumn columnOffice;
            
            private global::System.Data.DataColumn columnCellPhone;
            
            private global::System.Data.DataColumn columnSubdiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoDataTable() {
                this.TableName = "dsFamilyInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFamilyInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsFamilyInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipColumn {
                get {
                    return this.columnRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthdayColumn {
                get {
                    return this.columnBirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyIDColumn {
                get {
                    return this.columnFamilyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FellowshipColumn {
                get {
                    return this.columnFellowship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BaptismColumn {
                get {
                    return this.columnBaptism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobColumn {
                get {
                    return this.columnJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfficeColumn {
                get {
                    return this.columnOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellPhoneColumn {
                get {
                    return this.columnCellPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubdivColumn {
                get {
                    return this.columnSubdiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRow this[int index] {
                get {
                    return ((dsFamilyInfoRow)(this.Rows[index]));
                }
            }
            
            public event dsFamilyInfoRowChangeEventHandler dsFamilyInfoRowChanging;
            
            public event dsFamilyInfoRowChangeEventHandler dsFamilyInfoRowChanged;
            
            public event dsFamilyInfoRowChangeEventHandler dsFamilyInfoRowDeleting;
            
            public event dsFamilyInfoRowChangeEventHandler dsFamilyInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsFamilyInfoRow(dsFamilyInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRow AdddsFamilyInfoRow(string Name, string Relationship, System.DateTime Birthday, dsMemberInfoRow parentdsMemberInfoRowBydsMemberInfo_dsFamilyInfo, int MemberID, string Fellowship, string Baptism, string Job, string Office, string CellPhone, string Subdiv) {
                dsFamilyInfoRow rowdsFamilyInfoRow = ((dsFamilyInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Relationship,
                        Birthday,
                        null,
                        MemberID,
                        Fellowship,
                        Baptism,
                        Job,
                        Office,
                        CellPhone,
                        Subdiv};
                if ((parentdsMemberInfoRowBydsMemberInfo_dsFamilyInfo != null)) {
                    columnValuesArray[3] = parentdsMemberInfoRowBydsMemberInfo_dsFamilyInfo[19];
                }
                rowdsFamilyInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsFamilyInfoRow);
                return rowdsFamilyInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsFamilyInfoDataTable cln = ((dsFamilyInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsFamilyInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnRelationship = base.Columns["Relationship"];
                this.columnBirthday = base.Columns["Birthday"];
                this.columnFamilyID = base.Columns["FamilyID"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnFellowship = base.Columns["Fellowship"];
                this.columnBaptism = base.Columns["Baptism"];
                this.columnJob = base.Columns["Job"];
                this.columnOffice = base.Columns["Office"];
                this.columnCellPhone = base.Columns["CellPhone"];
                this.columnSubdiv = base.Columns["Subdiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnRelationship = new global::System.Data.DataColumn("Relationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationship);
                this.columnBirthday = new global::System.Data.DataColumn("Birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthday);
                this.columnFamilyID = new global::System.Data.DataColumn("FamilyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyID);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnFellowship = new global::System.Data.DataColumn("Fellowship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFellowship);
                this.columnBaptism = new global::System.Data.DataColumn("Baptism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaptism);
                this.columnJob = new global::System.Data.DataColumn("Job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob);
                this.columnOffice = new global::System.Data.DataColumn("Office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffice);
                this.columnCellPhone = new global::System.Data.DataColumn("CellPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellPhone);
                this.columnSubdiv = new global::System.Data.DataColumn("Subdiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubdiv);
                this.columnMemberID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRow NewdsFamilyInfoRow() {
                return ((dsFamilyInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsFamilyInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsFamilyInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsFamilyInfoRowChanged != null)) {
                    this.dsFamilyInfoRowChanged(this, new dsFamilyInfoRowChangeEvent(((dsFamilyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsFamilyInfoRowChanging != null)) {
                    this.dsFamilyInfoRowChanging(this, new dsFamilyInfoRowChangeEvent(((dsFamilyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsFamilyInfoRowDeleted != null)) {
                    this.dsFamilyInfoRowDeleted(this, new dsFamilyInfoRowChangeEvent(((dsFamilyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsFamilyInfoRowDeleting != null)) {
                    this.dsFamilyInfoRowDeleting(this, new dsFamilyInfoRowChangeEvent(((dsFamilyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsFamilyInfoRow(dsFamilyInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberCard ds = new dsMemberCard();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsFamilyInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dsContextsDataTable : global::System.Data.TypedTableBase<dsContextsRow> {
            
            private global::System.Data.DataColumn columnMemberId;
            
            private global::System.Data.DataColumn columnWriter;
            
            private global::System.Data.DataColumn columnRegdate;
            
            private global::System.Data.DataColumn columnContext;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsDataTable() {
                this.TableName = "dsContexts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsContextsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dsContextsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIdColumn {
                get {
                    return this.columnMemberId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WriterColumn {
                get {
                    return this.columnWriter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegdateColumn {
                get {
                    return this.columnRegdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextColumn {
                get {
                    return this.columnContext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRow this[int index] {
                get {
                    return ((dsContextsRow)(this.Rows[index]));
                }
            }
            
            public event dsContextsRowChangeEventHandler dsContextsRowChanging;
            
            public event dsContextsRowChangeEventHandler dsContextsRowChanged;
            
            public event dsContextsRowChangeEventHandler dsContextsRowDeleting;
            
            public event dsContextsRowChangeEventHandler dsContextsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddsContextsRow(dsContextsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRow AdddsContextsRow(dsMemberInfoRow parentdsMemberInfoRowBydsMemberInfo_dsContexts, string Writer, string Regdate, string Context) {
                dsContextsRow rowdsContextsRow = ((dsContextsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Writer,
                        Regdate,
                        Context};
                if ((parentdsMemberInfoRowBydsMemberInfo_dsContexts != null)) {
                    columnValuesArray[0] = parentdsMemberInfoRowBydsMemberInfo_dsContexts[0];
                }
                rowdsContextsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdsContextsRow);
                return rowdsContextsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dsContextsDataTable cln = ((dsContextsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dsContextsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMemberId = base.Columns["MemberId"];
                this.columnWriter = base.Columns["Writer"];
                this.columnRegdate = base.Columns["Regdate"];
                this.columnContext = base.Columns["Context"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMemberId = new global::System.Data.DataColumn("MemberId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberId);
                this.columnWriter = new global::System.Data.DataColumn("Writer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWriter);
                this.columnRegdate = new global::System.Data.DataColumn("Regdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegdate);
                this.columnContext = new global::System.Data.DataColumn("Context", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContext);
                this.columnMemberId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRow NewdsContextsRow() {
                return ((dsContextsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dsContextsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dsContextsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dsContextsRowChanged != null)) {
                    this.dsContextsRowChanged(this, new dsContextsRowChangeEvent(((dsContextsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dsContextsRowChanging != null)) {
                    this.dsContextsRowChanging(this, new dsContextsRowChangeEvent(((dsContextsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dsContextsRowDeleted != null)) {
                    this.dsContextsRowDeleted(this, new dsContextsRowChangeEvent(((dsContextsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dsContextsRowDeleting != null)) {
                    this.dsContextsRowDeleting(this, new dsContextsRowChangeEvent(((dsContextsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedsContextsRow(dsContextsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMemberCard ds = new dsMemberCard();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dsContextsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsMemberInfoRow : global::System.Data.DataRow {
            
            private dsMemberInfoDataTable tabledsMemberInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsMemberInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsMemberInfo = ((dsMemberInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemberId {
                get {
                    return ((int)(this[this.tabledsMemberInfo.MemberIdColumn]));
                }
                set {
                    this[this.tabledsMemberInfo.MemberIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Regdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsMemberInfo.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Regdate\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fellowship {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.FellowshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fellowship\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.FellowshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Home {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.HomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Home\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.HomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cellphone {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.CellphoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cellphone\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.CellphoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Office {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.OfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Office\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.OfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Job {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.JobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.JobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CellName {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.CellNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellName\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.CellNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Baptism {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.BaptismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baptism\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.BaptismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subdiv {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.SubdivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subdiv\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.SubdivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image {
                get {
                    try {
                        return ((byte[])(this[this.tabledsMemberInfo.ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsMemberInfo.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FamilyID {
                get {
                    try {
                        return ((int)(this[this.tabledsMemberInfo.FamilyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyID\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.FamilyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zipcode {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.ZipcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zipcode\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.ZipcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BaptismDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsMemberInfo.BaptismDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaptismDate\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.BaptismDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Relationship {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.RelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relationship\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.RelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntryType {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.EntryTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryType\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.EntryTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MinistryList {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.MinistryListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinistryList\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.MinistryListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Picture {
                get {
                    try {
                        return ((string)(this[this.tabledsMemberInfo.PictureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Picture\' in table \'dsMemberInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsMemberInfo.PictureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tabledsMemberInfo.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tabledsMemberInfo.RegdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFellowshipNull() {
                return this.IsNull(this.tabledsMemberInfo.FellowshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFellowshipNull() {
                this[this.tabledsMemberInfo.FellowshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsMemberInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsMemberInfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tabledsMemberInfo.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tabledsMemberInfo.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeNull() {
                return this.IsNull(this.tabledsMemberInfo.HomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeNull() {
                this[this.tabledsMemberInfo.HomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellphoneNull() {
                return this.IsNull(this.tabledsMemberInfo.CellphoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellphoneNull() {
                this[this.tabledsMemberInfo.CellphoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficeNull() {
                return this.IsNull(this.tabledsMemberInfo.OfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficeNull() {
                this[this.tabledsMemberInfo.OfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNull() {
                return this.IsNull(this.tabledsMemberInfo.JobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNull() {
                this[this.tabledsMemberInfo.JobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabledsMemberInfo.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabledsMemberInfo.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellNameNull() {
                return this.IsNull(this.tabledsMemberInfo.CellNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellNameNull() {
                this[this.tabledsMemberInfo.CellNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledsMemberInfo.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledsMemberInfo.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tabledsMemberInfo.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tabledsMemberInfo.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaptismNull() {
                return this.IsNull(this.tabledsMemberInfo.BaptismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaptismNull() {
                this[this.tabledsMemberInfo.BaptismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivNull() {
                return this.IsNull(this.tabledsMemberInfo.SubdivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivNull() {
                this[this.tabledsMemberInfo.SubdivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageNull() {
                return this.IsNull(this.tabledsMemberInfo.ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageNull() {
                this[this.tabledsMemberInfo.ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tabledsMemberInfo.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tabledsMemberInfo.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tabledsMemberInfo.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tabledsMemberInfo.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabledsMemberInfo.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabledsMemberInfo.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyIDNull() {
                return this.IsNull(this.tabledsMemberInfo.FamilyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyIDNull() {
                this[this.tabledsMemberInfo.FamilyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tabledsMemberInfo.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tabledsMemberInfo.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipcodeNull() {
                return this.IsNull(this.tabledsMemberInfo.ZipcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipcodeNull() {
                this[this.tabledsMemberInfo.ZipcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaptismDateNull() {
                return this.IsNull(this.tabledsMemberInfo.BaptismDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaptismDateNull() {
                this[this.tabledsMemberInfo.BaptismDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipNull() {
                return this.IsNull(this.tabledsMemberInfo.RelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipNull() {
                this[this.tabledsMemberInfo.RelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryTypeNull() {
                return this.IsNull(this.tabledsMemberInfo.EntryTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryTypeNull() {
                this[this.tabledsMemberInfo.EntryTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinistryListNull() {
                return this.IsNull(this.tabledsMemberInfo.MinistryListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinistryListNull() {
                this[this.tabledsMemberInfo.MinistryListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureNull() {
                return this.IsNull(this.tabledsMemberInfo.PictureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureNull() {
                this[this.tabledsMemberInfo.PictureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRow[] GetdsContextsRows() {
                if ((this.Table.ChildRelations["dsMemberInfo_dsContexts"] == null)) {
                    return new dsContextsRow[0];
                }
                else {
                    return ((dsContextsRow[])(base.GetChildRows(this.Table.ChildRelations["dsMemberInfo_dsContexts"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRow[] GetdsFamilyInfoRows() {
                if ((this.Table.ChildRelations["dsMemberInfo_dsFamilyInfo"] == null)) {
                    return new dsFamilyInfoRow[0];
                }
                else {
                    return ((dsFamilyInfoRow[])(base.GetChildRows(this.Table.ChildRelations["dsMemberInfo_dsFamilyInfo"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsFamilyInfoRow : global::System.Data.DataRow {
            
            private dsFamilyInfoDataTable tabledsFamilyInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsFamilyInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsFamilyInfo = ((dsFamilyInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Relationship {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.RelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relationship\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.RelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledsFamilyInfo.BirthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Birthday\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.BirthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FamilyID {
                get {
                    try {
                        return ((int)(this[this.tabledsFamilyInfo.FamilyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyID\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.FamilyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemberID {
                get {
                    return ((int)(this[this.tabledsFamilyInfo.MemberIDColumn]));
                }
                set {
                    this[this.tabledsFamilyInfo.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fellowship {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.FellowshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fellowship\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.FellowshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Baptism {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.BaptismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baptism\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.BaptismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Job {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.JobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.JobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Office {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.OfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Office\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.OfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CellPhone {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.CellPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellPhone\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.CellPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subdiv {
                get {
                    try {
                        return ((string)(this[this.tabledsFamilyInfo.SubdivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subdiv\' in table \'dsFamilyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsFamilyInfo.SubdivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow dsMemberInfoRow {
                get {
                    return ((dsMemberInfoRow)(this.GetParentRow(this.Table.ParentRelations["dsMemberInfo_dsFamilyInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dsMemberInfo_dsFamilyInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledsFamilyInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledsFamilyInfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipNull() {
                return this.IsNull(this.tabledsFamilyInfo.RelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipNull() {
                this[this.tabledsFamilyInfo.RelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthdayNull() {
                return this.IsNull(this.tabledsFamilyInfo.BirthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthdayNull() {
                this[this.tabledsFamilyInfo.BirthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyIDNull() {
                return this.IsNull(this.tabledsFamilyInfo.FamilyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyIDNull() {
                this[this.tabledsFamilyInfo.FamilyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFellowshipNull() {
                return this.IsNull(this.tabledsFamilyInfo.FellowshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFellowshipNull() {
                this[this.tabledsFamilyInfo.FellowshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBaptismNull() {
                return this.IsNull(this.tabledsFamilyInfo.BaptismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBaptismNull() {
                this[this.tabledsFamilyInfo.BaptismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobNull() {
                return this.IsNull(this.tabledsFamilyInfo.JobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobNull() {
                this[this.tabledsFamilyInfo.JobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfficeNull() {
                return this.IsNull(this.tabledsFamilyInfo.OfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfficeNull() {
                this[this.tabledsFamilyInfo.OfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellPhoneNull() {
                return this.IsNull(this.tabledsFamilyInfo.CellPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellPhoneNull() {
                this[this.tabledsFamilyInfo.CellPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubdivNull() {
                return this.IsNull(this.tabledsFamilyInfo.SubdivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubdivNull() {
                this[this.tabledsFamilyInfo.SubdivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dsContextsRow : global::System.Data.DataRow {
            
            private dsContextsDataTable tabledsContexts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dsContextsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledsContexts = ((dsContextsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemberId {
                get {
                    return ((int)(this[this.tabledsContexts.MemberIdColumn]));
                }
                set {
                    this[this.tabledsContexts.MemberIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Writer {
                get {
                    try {
                        return ((string)(this[this.tabledsContexts.WriterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Writer\' in table \'dsContexts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsContexts.WriterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Regdate {
                get {
                    try {
                        return ((string)(this[this.tabledsContexts.RegdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Regdate\' in table \'dsContexts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsContexts.RegdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Context {
                get {
                    try {
                        return ((string)(this[this.tabledsContexts.ContextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Context\' in table \'dsContexts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledsContexts.ContextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow dsMemberInfoRow {
                get {
                    return ((dsMemberInfoRow)(this.GetParentRow(this.Table.ParentRelations["dsMemberInfo_dsContexts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dsMemberInfo_dsContexts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWriterNull() {
                return this.IsNull(this.tabledsContexts.WriterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWriterNull() {
                this[this.tabledsContexts.WriterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegdateNull() {
                return this.IsNull(this.tabledsContexts.RegdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegdateNull() {
                this[this.tabledsContexts.RegdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextNull() {
                return this.IsNull(this.tabledsContexts.ContextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextNull() {
                this[this.tabledsContexts.ContextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsMemberInfoRowChangeEvent : global::System.EventArgs {
            
            private dsMemberInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRowChangeEvent(dsMemberInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsMemberInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsFamilyInfoRowChangeEvent : global::System.EventArgs {
            
            private dsFamilyInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRowChangeEvent(dsFamilyInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsFamilyInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dsContextsRowChangeEvent : global::System.EventArgs {
            
            private dsContextsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRowChangeEvent(dsContextsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dsContextsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591