//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LandWeb.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChodaeEntities : DbContext
    {
        public ChodaeEntities()
            : base("name=ChodaeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<member_list_Result> member_list(ObjectParameter frk_n4ErrorCode, ObjectParameter frk_strErrorText, Nullable<bool> frk_isRequiresNewTransaction, Nullable<int> memberid, string fullname, string firstName, string lastName, string enFirstName, string enLastName, Nullable<int> agefrom, Nullable<int> ageto, string city, string state, Nullable<int> baptismId, Nullable<int> sex, Nullable<int> subDivision, Nullable<System.DateTime> baptismFrom, Nullable<System.DateTime> baptismTo, Nullable<System.DateTime> regfrom, Nullable<System.DateTime> regto, Nullable<int> status, Nullable<int> jobtype, Nullable<System.DateTime> birthfrom, Nullable<System.DateTime> birthto, Nullable<int> married, Nullable<int> relationship, Nullable<int> fellowship, Nullable<int> active, string home, string cellPhone)
        {
            var frk_isRequiresNewTransactionParameter = frk_isRequiresNewTransaction.HasValue ?
                new ObjectParameter("frk_isRequiresNewTransaction", frk_isRequiresNewTransaction) :
                new ObjectParameter("frk_isRequiresNewTransaction", typeof(bool));
    
            var memberidParameter = memberid.HasValue ?
                new ObjectParameter("memberid", memberid) :
                new ObjectParameter("memberid", typeof(int));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var enFirstNameParameter = enFirstName != null ?
                new ObjectParameter("enFirstName", enFirstName) :
                new ObjectParameter("enFirstName", typeof(string));
    
            var enLastNameParameter = enLastName != null ?
                new ObjectParameter("enLastName", enLastName) :
                new ObjectParameter("enLastName", typeof(string));
    
            var agefromParameter = agefrom.HasValue ?
                new ObjectParameter("agefrom", agefrom) :
                new ObjectParameter("agefrom", typeof(int));
    
            var agetoParameter = ageto.HasValue ?
                new ObjectParameter("ageto", ageto) :
                new ObjectParameter("ageto", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var baptismIdParameter = baptismId.HasValue ?
                new ObjectParameter("baptismId", baptismId) :
                new ObjectParameter("baptismId", typeof(int));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(int));
    
            var subDivisionParameter = subDivision.HasValue ?
                new ObjectParameter("subDivision", subDivision) :
                new ObjectParameter("subDivision", typeof(int));
    
            var baptismFromParameter = baptismFrom.HasValue ?
                new ObjectParameter("baptismFrom", baptismFrom) :
                new ObjectParameter("baptismFrom", typeof(System.DateTime));
    
            var baptismToParameter = baptismTo.HasValue ?
                new ObjectParameter("baptismTo", baptismTo) :
                new ObjectParameter("baptismTo", typeof(System.DateTime));
    
            var regfromParameter = regfrom.HasValue ?
                new ObjectParameter("regfrom", regfrom) :
                new ObjectParameter("regfrom", typeof(System.DateTime));
    
            var regtoParameter = regto.HasValue ?
                new ObjectParameter("regto", regto) :
                new ObjectParameter("regto", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var jobtypeParameter = jobtype.HasValue ?
                new ObjectParameter("jobtype", jobtype) :
                new ObjectParameter("jobtype", typeof(int));
    
            var birthfromParameter = birthfrom.HasValue ?
                new ObjectParameter("birthfrom", birthfrom) :
                new ObjectParameter("birthfrom", typeof(System.DateTime));
    
            var birthtoParameter = birthto.HasValue ?
                new ObjectParameter("birthto", birthto) :
                new ObjectParameter("birthto", typeof(System.DateTime));
    
            var marriedParameter = married.HasValue ?
                new ObjectParameter("married", married) :
                new ObjectParameter("married", typeof(int));
    
            var relationshipParameter = relationship.HasValue ?
                new ObjectParameter("relationship", relationship) :
                new ObjectParameter("relationship", typeof(int));
    
            var fellowshipParameter = fellowship.HasValue ?
                new ObjectParameter("fellowship", fellowship) :
                new ObjectParameter("fellowship", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            var homeParameter = home != null ?
                new ObjectParameter("home", home) :
                new ObjectParameter("home", typeof(string));
    
            var cellPhoneParameter = cellPhone != null ?
                new ObjectParameter("cellPhone", cellPhone) :
                new ObjectParameter("cellPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<member_list_Result>("member_list", frk_n4ErrorCode, frk_strErrorText, frk_isRequiresNewTransactionParameter, memberidParameter, fullnameParameter, firstNameParameter, lastNameParameter, enFirstNameParameter, enLastNameParameter, agefromParameter, agetoParameter, cityParameter, stateParameter, baptismIdParameter, sexParameter, subDivisionParameter, baptismFromParameter, baptismToParameter, regfromParameter, regtoParameter, statusParameter, jobtypeParameter, birthfromParameter, birthtoParameter, marriedParameter, relationshipParameter, fellowshipParameter, activeParameter, homeParameter, cellPhoneParameter);
        }
    }
}
